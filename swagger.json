{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "BreakPoint API",
      "description": "Documentation over project BreakPoint API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "JWT": {
        "description": "Enter JWT token provided after login",
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "security": [
      {
        "JWT": []
      }
    ],
    "paths": {
      "/organization/{orgId}/tasks/all/": {
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "description": "ID of organization",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Organization"
          ],
          "summary": "Get all tasks for a specific organization",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type":"array",
                "items": {
                "$ref": "#/definitions/Tasks"
              }
              }
            }
          }
        }
      },
      "/organization/{orgId}/tasks/new/": {
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "description": "ID of organization",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Task object that needs to be added to the organization",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        ],
        "post": {
          "tags": [
            "Organization"
          ],
          "summary": "Create a new task on specified organization",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/organization/{orgId}/tasks/{taskId}/": {
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "description": "ID of organization",
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "ID of task",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Organization"
          ],
          "summary": "Get a specific task on specified organization",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/Tasks"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Organization"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Task object that needs to be added to the organization",
              "schema": {
                "required": [
                  "id"
                ],
                "$ref": "#/definitions/Tasks"
              }
            }
          ],
          "summary": "Edit a specific task on specified organization",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "delete": {
          "tags": [
            "Organization"
          ],
          "summary": "Delete a specific task on specified organization",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/user/organization/all/": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all organizations for a user",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type":"array",
                "items": {
                  "$ref": "#/definitions/Users"
                }
              }
            }
          }
        }
      },
      "/user/tasks/all/": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all tasks for a user",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type":"array",
                "items": {
                  "$ref": "#/definitions/Users"
                }
              }
            }
          }
        }
      },
      "/organization/{orgId}/users/all/": {
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "description": "ID of organization",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all users that have access to a specific organization",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type":"array",
                "items": {
                  "$ref": "#/definitions/Users"
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Tasks": {
        "required": [
          "id",
          "organization",
          "assignee",
          "title",
          "deadline",
          "state"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },          
          "assignee": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "Users": {
        "required": [
          "id",
          "email",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },          
          "email": {
            "type": "string"
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
          
      }
    }
  }
}